package br.edu.ufrpe.uag.projetao.model;
// Generated 20/04/2016 11:43:59 by Hibernate Tools 4.3.1

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * AlocacaoTexto generated by hbm2java
 */
@Entity
@Table(name = "alocacao_texto", schema = "public"
)
public class AlocacaoTexto implements java.io.Serializable, InterfaceEntity {

    private int id;
    private BaseTexto baseTexto;
    private Usuario usuario;
    private String texto;
    private Set<ClassificacaoTexto> classificacaoTextos = new HashSet<>(0);
    private Set<EscolhaClasseTexto> escolhaClasseTextos = new HashSet<>(0);
    private Set<RespostaTexto> respostaTextos = new HashSet<>(0);

    public AlocacaoTexto() {
    }

    public AlocacaoTexto(int id) {
        this.id = id;
    }

    public AlocacaoTexto(int id, BaseTexto baseTexto, Usuario usuario, String texto, Set<ClassificacaoTexto> classificacaoTextos, Set<EscolhaClasseTexto> escolhaClasseTextos) {
        this.id = id;
        this.baseTexto = baseTexto;
        this.usuario = usuario;
        this.texto = texto;
        this.classificacaoTextos = classificacaoTextos;
        this.escolhaClasseTextos = escolhaClasseTextos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "base_texto")
    public BaseTexto getBaseTexto() {
        return this.baseTexto;
    }

    public void setBaseTexto(BaseTexto baseTexto) {
        this.baseTexto = baseTexto;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supervisor")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "texto")
    public String getTexto() {
        return this.texto;
    }

    public void setTexto(String texto) {
        this.texto = texto;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "alocacaoTexto")
    public Set<ClassificacaoTexto> getClassificacaoTextos() {
        return this.classificacaoTextos;
    }

    public void setClassificacaoTextos(Set<ClassificacaoTexto> classificacaoTextos) {
        this.classificacaoTextos = classificacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "alocacaoTexto")
    public Set<EscolhaClasseTexto> getEscolhaClasseTextos() {
        return this.escolhaClasseTextos;
    }

    public void setEscolhaClasseTextos(Set<EscolhaClasseTexto> escolhaClasseTextos) {
        this.escolhaClasseTextos = escolhaClasseTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "escolhaClasseTexto")
    public Set<RespostaTexto> getRespostaTextos() {
        return this.respostaTextos;
    }

    public void setRespostaTextos(Set<RespostaTexto> respostaTextos) {
        this.respostaTextos = respostaTextos;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 73 * hash + Objects.hashCode(this.baseTexto);
        hash = 73 * hash + Objects.hashCode(this.usuario);
        hash = 73 * hash + Objects.hashCode(this.texto);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final AlocacaoTexto other = (AlocacaoTexto) obj;
        if (!Objects.equals(this.texto, other.texto)) {
            return false;
        }
        if (!Objects.equals(this.baseTexto, other.baseTexto)) {
            return false;
        }
        return Objects.equals(this.usuario, other.usuario);
    }

    @Override
    public String toString() {
        return "AlocacaoTexto{" + "baseTexto=" + baseTexto + ", usuario=" + usuario + ", texto=" + texto + '}';
    }

}
