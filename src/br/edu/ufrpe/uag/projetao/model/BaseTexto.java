package br.edu.ufrpe.uag.projetao.model;
// Generated 20/04/2016 11:43:59 by Hibernate Tools 4.3.1

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * BaseTexto generated by hbm2java
 */
@Entity
@Table(name = "base_texto", schema = "public"
)
public class BaseTexto implements java.io.Serializable, InterfaceEntity {

    private int id;
    private Usuario usuario;
    private String titulo;
    private String descricao;
    private Set<AlocacaoTexto> alocacaoTextos = new HashSet<>(0);
    private Set<LiberacaoBaseTexto> liberacaoBaseTextos = new HashSet<>(0);

    public BaseTexto() {
    }

    public BaseTexto(int id, Usuario usuario, String titulo, String descricao) {
        this.id = id;
        this.usuario = usuario;
        this.titulo = titulo;
        this.descricao = descricao;
    }

    public BaseTexto(int id, Usuario usuario, String titulo, String descricao, Set<AlocacaoTexto> alocacaoTextos, Set<LiberacaoBaseTexto> liberacaoBaseTextos) {
        this.id = id;
        this.usuario = usuario;
        this.titulo = titulo;
        this.descricao = descricao;
        this.alocacaoTextos = alocacaoTextos;
        this.liberacaoBaseTextos = liberacaoBaseTextos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supervisor", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "titulo", nullable = false)
    public String getTitulo() {
        return this.titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    @Column(name = "descricao", nullable = false)
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "baseTexto")
    public Set<AlocacaoTexto> getAlocacaoTextos() {
        return this.alocacaoTextos;
    }

    public void setAlocacaoTextos(Set<AlocacaoTexto> alocacaoTextos) {
        this.alocacaoTextos = alocacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "baseTexto")
    public Set<LiberacaoBaseTexto> getLiberacaoBaseTextos() {
        return this.liberacaoBaseTextos;
    }

    public void setLiberacaoBaseTextos(Set<LiberacaoBaseTexto> liberacaoBaseTextos) {
        this.liberacaoBaseTextos = liberacaoBaseTextos;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 47 * hash + Objects.hashCode(this.usuario);
        hash = 47 * hash + Objects.hashCode(this.alocacaoTextos);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final BaseTexto other = (BaseTexto) obj;
        if (!Objects.equals(this.usuario, other.usuario)) {
            return false;
        }
        return Objects.equals(this.alocacaoTextos, other.alocacaoTextos);
    }

    @Override
    public String toString() {
        return "BaseTexto{" + "id=" + id + ", usuario=" + usuario + ", titulo=" + titulo + ", descricao=" + descricao + '}';
    }

}
