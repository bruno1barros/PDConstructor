package br.edu.ufrpe.uag.projetao.model;
// Generated 26/04/2016 23:17:23 by Hibernate Tools 4.3.1

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import br.edu.ufrpe.uag.projetao.annotations.Coluna;
import br.edu.ufrpe.uag.projetao.annotations.Tabela;
import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;

/**
 * ClassificacaoTexto generated by hbm2java
 */
@Tabela
@Entity
@Table(name = "classificacao_texto", schema = "public")
public class ClassificacaoTexto implements java.io.Serializable, InterfaceEntity {

    @Coluna(colunaNome = "Alocação de Texto", colunaPosicao = 0)
    private AlocacaoTexto alocacaoTexto;
    @Coluna(colunaNome = "Classe", colunaPosicao = 1)
    private EscolhaClasseTexto escolhaClasseTexto;
    @Coluna(colunaNome = "Escravo", colunaPosicao = 2)
    private Usuario usuario;

    public ClassificacaoTexto() {
    }

    public ClassificacaoTexto(AlocacaoTexto alocacaoTexto, EscolhaClasseTexto escolhaClasseTexto, Usuario usuario) {

	this.alocacaoTexto = alocacaoTexto;
	this.escolhaClasseTexto = escolhaClasseTexto;
	this.usuario = usuario;
    }

    @Id
    @ManyToOne
    @JoinColumn(name = "alocacao_texto", nullable = false, insertable = false, updatable = false)
    public AlocacaoTexto getAlocacaoTexto() {
	return this.alocacaoTexto;
    }

    public void setAlocacaoTexto(AlocacaoTexto alocacaoTexto) {
	this.alocacaoTexto = alocacaoTexto;
    }

    @Id
    @ManyToOne
    @JoinColumn(name = "escolha_texto", nullable = false, insertable = false, updatable = false)
    public EscolhaClasseTexto getEscolhaClasseTexto() {
	return this.escolhaClasseTexto;
    }

    public void setEscolhaClasseTexto(EscolhaClasseTexto escolhaClasseTexto) {
	this.escolhaClasseTexto = escolhaClasseTexto;
    }

    @Id
    @ManyToOne
    @JoinColumn(name = "escravo", nullable = false, insertable = false, updatable = false)
    public Usuario getUsuario() {
	return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
	this.usuario = usuario;
    }

    @Override
    public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((alocacaoTexto == null) ? 0 : alocacaoTexto.hashCode());
	result = prime * result + ((escolhaClasseTexto == null) ? 0 : escolhaClasseTexto.hashCode());
	result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
	return result;
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj)
	    return true;
	if (obj == null)
	    return false;
	if (getClass() != obj.getClass())
	    return false;
	ClassificacaoTexto other = (ClassificacaoTexto) obj;
	if (alocacaoTexto == null) {
	    if (other.alocacaoTexto != null)
		return false;
	} else if (!alocacaoTexto.equals(other.alocacaoTexto))
	    return false;
	if (escolhaClasseTexto == null) {
	    if (other.escolhaClasseTexto != null)
		return false;
	} else if (!escolhaClasseTexto.equals(other.escolhaClasseTexto))
	    return false;
	if (usuario == null) {
	    if (other.usuario != null)
		return false;
	} else if (!usuario.equals(other.usuario))
	    return false;
	return true;
    }

    @Override
    public String toString() {
	return "ClassificacaoTexto{" + "alocacaoTexto=" + alocacaoTexto + ", escolhaClasseTexto=" + escolhaClasseTexto
		+ ", usuario=" + usuario + '}';
    }

}
