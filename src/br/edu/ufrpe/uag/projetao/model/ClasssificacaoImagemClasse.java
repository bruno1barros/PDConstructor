package br.edu.ufrpe.uag.projetao.model;
// Generated 26/04/2016 23:17:23 by Hibernate Tools 4.3.1

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;
import java.util.Objects;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ClasssificacaoImagemClasse generated by hbm2java
 */
@Entity
@Table(name = "classsificacao_imagem_classe", schema = "public"
)
public class ClasssificacaoImagemClasse implements java.io.Serializable, InterfaceEntity {

    private ClasssificacaoImagemClasseId id;
    private AlocacaoImagemClasse alocacaoImagemClasse;
    private EscolhaImagemClasse escolhaImagemClasse;
    private Usuario usuario;

    public ClasssificacaoImagemClasse() {
    }

    public ClasssificacaoImagemClasse(ClasssificacaoImagemClasseId id, AlocacaoImagemClasse alocacaoImagemClasse, EscolhaImagemClasse escolhaImagemClasse, Usuario usuario) {
        this.id = id;
        this.alocacaoImagemClasse = alocacaoImagemClasse;
        this.escolhaImagemClasse = escolhaImagemClasse;
        this.usuario = usuario;
    }

    @EmbeddedId

    @AttributeOverrides({
        @AttributeOverride(name = "escravo", column = @Column(name = "escravo", nullable = false)),
        @AttributeOverride(name = "alocacaoImagemClasse", column = @Column(name = "alocacao_imagem_classe", nullable = false)),
        @AttributeOverride(name = "escolhaImagemClasse", column = @Column(name = "escolha_imagem_classe", nullable = false))})
    public ClasssificacaoImagemClasseId getId() {
        return this.id;
    }

    public void setId(ClasssificacaoImagemClasseId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "alocacao_imagem_classe", nullable = false, insertable = false, updatable = false)
    public AlocacaoImagemClasse getAlocacaoImagemClasse() {
        return this.alocacaoImagemClasse;
    }

    public void setAlocacaoImagemClasse(AlocacaoImagemClasse alocacaoImagemClasse) {
        this.alocacaoImagemClasse = alocacaoImagemClasse;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "escolha_imagem_classe", nullable = false, insertable = false, updatable = false)
    public EscolhaImagemClasse getEscolhaImagemClasse() {
        return this.escolhaImagemClasse;
    }

    public void setEscolhaImagemClasse(EscolhaImagemClasse escolhaImagemClasse) {
        this.escolhaImagemClasse = escolhaImagemClasse;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "escravo", nullable = false, insertable = false, updatable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 97 * hash + Objects.hashCode(this.id);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ClasssificacaoImagemClasse other = (ClasssificacaoImagemClasse) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public String toString() {
        return "ClasssificacaoImagemClasse{" + "alocacaoImagemClasse=" + alocacaoImagemClasse + ", escolhaImagemClasse=" + escolhaImagemClasse + ", usuario=" + usuario + '}';
    }

}
