package br.edu.ufrpe.uag.projetao.model;
// Generated 20/04/2016 11:43:59 by Hibernate Tools 4.3.1

import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;
import java.util.Objects;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * LiberacaoBaseTexto generated by hbm2java
 */
@Entity
@Table(name = "liberacao_base_texto", schema = "public"
)
public class LiberacaoBaseTexto implements java.io.Serializable, InterfaceEntity {

    private LiberacaoBaseTextoId id;
    private BaseTexto baseTexto;
    private Usuario usuarioByEscravo;
    private Usuario usuarioBySupervisor;
    private char status;

    public LiberacaoBaseTexto() {
    }

    public LiberacaoBaseTexto(LiberacaoBaseTextoId id, BaseTexto baseTexto, Usuario usuarioByEscravo, Usuario usuarioBySupervisor, char status) {
        this.id = id;
        this.baseTexto = baseTexto;
        this.usuarioByEscravo = usuarioByEscravo;
        this.usuarioBySupervisor = usuarioBySupervisor;
        this.status = status;
    }

    @EmbeddedId

    @AttributeOverrides({
        @AttributeOverride(name = "baseTexto", column = @Column(name = "base_texto", nullable = false)),
        @AttributeOverride(name = "supervisor", column = @Column(name = "supervisor", nullable = false)),
        @AttributeOverride(name = "escravo", column = @Column(name = "escravo", nullable = false))})
    public LiberacaoBaseTextoId getId() {
        return this.id;
    }

    public void setId(LiberacaoBaseTextoId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "base_texto", nullable = false, insertable = false, updatable = false)
    public BaseTexto getBaseTexto() {
        return this.baseTexto;
    }

    public void setBaseTexto(BaseTexto baseTexto) {
        this.baseTexto = baseTexto;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "escravo", nullable = false, insertable = false, updatable = false)
    public Usuario getUsuarioByEscravo() {
        return this.usuarioByEscravo;
    }

    public void setUsuarioByEscravo(Usuario usuarioByEscravo) {
        this.usuarioByEscravo = usuarioByEscravo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supervisor", nullable = false, insertable = false, updatable = false)
    public Usuario getUsuarioBySupervisor() {
        return this.usuarioBySupervisor;
    }

    public void setUsuarioBySupervisor(Usuario usuarioBySupervisor) {
        this.usuarioBySupervisor = usuarioBySupervisor;
    }

    @Column(name = "status", nullable = false, length = 1)
    public char getStatus() {
        return this.status;
    }

    public void setStatus(char status) {
        this.status = status;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 89 * hash + Objects.hashCode(this.id);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final LiberacaoBaseTexto other = (LiberacaoBaseTexto) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public String toString() {
        return "LiberacaoBaseTexto{" + "baseTexto=" + baseTexto + ", usuarioByEscravo=" + usuarioByEscravo + ", usuarioBySupervisor=" + usuarioBySupervisor + ", status=" + status + '}';
    }

}
