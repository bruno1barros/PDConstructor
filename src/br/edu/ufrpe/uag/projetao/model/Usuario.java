package br.edu.ufrpe.uag.projetao.model;
// Generated 26/04/2016 23:17:23 by Hibernate Tools 4.3.1

import br.edu.ufrpe.uag.projetao.annotations.Coluna;
import br.edu.ufrpe.uag.projetao.annotations.Tabela;
import br.edu.ufrpe.uag.projetao.interfaces.InterfaceEntity;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Tabela
@Entity
@Table(name = "usuario", schema = "public")
public class Usuario implements java.io.Serializable, InterfaceEntity {

    private int id;
    private Perfil perfil;
    @Coluna(colunaNome="Nome",colunaPosicao=0)
    private String nome;
    @Coluna(colunaNome="E-mail",colunaPosicao=1)
    private String email;
    private String senha;
    private Set<ImagemClasse> imagemClasses = new HashSet<>(0);
    private Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForEscravo = new HashSet<>(0);
    private Set<LiberacaoBaseTexto> liberacaoBaseTextosForEscravo = new HashSet<>(0);
    private Set<AlocacaoImagemClasse> alocacaoImagemClasses = new HashSet<>(0);
    private Set<AlocacaoTexto> alocacaoTextos = new HashSet<>(0);
    private Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForSupervisor = new HashSet<>(0);
    private Set<BaseTexto> baseTextos = new HashSet<>(0);
    private Set<ClassificacaoTexto> classificacaoTextos = new HashSet<>(0);
    private Set<LiberacaoBaseTexto> liberacaoBaseTextosForSupervisor = new HashSet<>(0);
    private Set<BaseImagemClasse> baseImagemClasses = new HashSet<>(0);
    private Set<ClasssificacaoImagemClasse> classsificacaoImagemClasses = new HashSet<>(0);

    public Usuario() {
    }

    public Usuario(int id, Perfil perfil, String email, String senha) {
	this.id = id;
	this.perfil = perfil;
	this.email = email;
	this.senha = senha;
    }

    public Usuario(int id, Perfil perfil, String nome, String email, String senha, Set<ImagemClasse> imagemClasses,
	    Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForEscravo,
	    Set<LiberacaoBaseTexto> liberacaoBaseTextosForEscravo, Set<AlocacaoImagemClasse> alocacaoImagemClasses,
	    Set<AlocacaoTexto> alocacaoTextos, Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForSupervisor,
	    Set<BaseTexto> baseTextos, Set<ClassificacaoTexto> classificacaoTextos,
	    Set<LiberacaoBaseTexto> liberacaoBaseTextosForSupervisor, Set<BaseImagemClasse> baseImagemClasses,
	    Set<ClasssificacaoImagemClasse> classsificacaoImagemClasses) {
	this.id = id;
	this.perfil = perfil;
	this.nome = nome;
	this.email = email;
	this.senha = senha;
	this.imagemClasses = imagemClasses;
	this.liberacaoBaseImagemClassesForEscravo = liberacaoBaseImagemClassesForEscravo;
	this.liberacaoBaseTextosForEscravo = liberacaoBaseTextosForEscravo;
	this.alocacaoImagemClasses = alocacaoImagemClasses;
	this.alocacaoTextos = alocacaoTextos;
	this.liberacaoBaseImagemClassesForSupervisor = liberacaoBaseImagemClassesForSupervisor;
	this.baseTextos = baseTextos;
	this.classificacaoTextos = classificacaoTextos;
	this.liberacaoBaseTextosForSupervisor = liberacaoBaseTextosForSupervisor;
	this.baseImagemClasses = baseImagemClasses;
	this.classsificacaoImagemClasses = classsificacaoImagemClasses;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true)
    public int getId() {
	return this.id;
    }

    public void setId(int id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "perfil")
    public Perfil getPerfil() {
	return this.perfil;
    }

    public void setPerfil(Perfil perfil) {
	this.perfil = perfil;
    }

    @Column(name = "nome", length = 100)
    public String getNome() {
	return this.nome;
    }

    public void setNome(String nome) {
	this.nome = nome;
    }

    @Column(name = "email")
    public String getEmail() {
	return this.email;
    }

    public void setEmail(String email) {
	this.email = email;
    }

    @Column(name = "senha")
    public String getSenha() {
	return this.senha;
    }

    public void setSenha(String senha) {
	this.senha = senha;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ImagemClasse> getImagemClasses() {
	return this.imagemClasses;
    }

    public void setImagemClasses(Set<ImagemClasse> imagemClasses) {
	this.imagemClasses = imagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseImagemClasse> getLiberacaoBaseImagemClassesForEscravo() {
	return this.liberacaoBaseImagemClassesForEscravo;
    }

    public void setLiberacaoBaseImagemClassesForEscravo(
	    Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForEscravo) {
	this.liberacaoBaseImagemClassesForEscravo = liberacaoBaseImagemClassesForEscravo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByEscravo")
    public Set<LiberacaoBaseTexto> getLiberacaoBaseTextosForEscravo() {
	return this.liberacaoBaseTextosForEscravo;
    }

    public void setLiberacaoBaseTextosForEscravo(Set<LiberacaoBaseTexto> liberacaoBaseTextosForEscravo) {
	this.liberacaoBaseTextosForEscravo = liberacaoBaseTextosForEscravo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoImagemClasse> getAlocacaoImagemClasses() {
	return this.alocacaoImagemClasses;
    }

    public void setAlocacaoImagemClasses(Set<AlocacaoImagemClasse> alocacaoImagemClasses) {
	this.alocacaoImagemClasses = alocacaoImagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<AlocacaoTexto> getAlocacaoTextos() {
	return this.alocacaoTextos;
    }

    public void setAlocacaoTextos(Set<AlocacaoTexto> alocacaoTextos) {
	this.alocacaoTextos = alocacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseImagemClasse> getLiberacaoBaseImagemClassesForSupervisor() {
	return this.liberacaoBaseImagemClassesForSupervisor;
    }

    public void setLiberacaoBaseImagemClassesForSupervisor(
	    Set<LiberacaoBaseImagemClasse> liberacaoBaseImagemClassesForSupervisor) {
	this.liberacaoBaseImagemClassesForSupervisor = liberacaoBaseImagemClassesForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseTexto> getBaseTextos() {
	return this.baseTextos;
    }

    public void setBaseTextos(Set<BaseTexto> baseTextos) {
	this.baseTextos = baseTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ClassificacaoTexto> getClassificacaoTextos() {
	return this.classificacaoTextos;
    }

    public void setClassificacaoTextos(Set<ClassificacaoTexto> classificacaoTextos) {
	this.classificacaoTextos = classificacaoTextos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioBySupervisor")
    public Set<LiberacaoBaseTexto> getLiberacaoBaseTextosForSupervisor() {
	return this.liberacaoBaseTextosForSupervisor;
    }

    public void setLiberacaoBaseTextosForSupervisor(Set<LiberacaoBaseTexto> liberacaoBaseTextosForSupervisor) {
	this.liberacaoBaseTextosForSupervisor = liberacaoBaseTextosForSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<BaseImagemClasse> getBaseImagemClasses() {
	return this.baseImagemClasses;
    }

    public void setBaseImagemClasses(Set<BaseImagemClasse> baseImagemClasses) {
	this.baseImagemClasses = baseImagemClasses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Set<ClasssificacaoImagemClasse> getClasssificacaoImagemClasses() {
	return this.classsificacaoImagemClasses;
    }

    public void setClasssificacaoImagemClasses(Set<ClasssificacaoImagemClasse> classsificacaoImagemClasses) {
	this.classsificacaoImagemClasses = classsificacaoImagemClasses;
    }

    @Override
    public int hashCode() {
	int hash = 5;
	hash = 47 * hash + Objects.hashCode(this.perfil);
	hash = 47 * hash + Objects.hashCode(this.senha);
	hash = 47 * hash + Objects.hashCode(this.email);
	return hash;
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (getClass() != obj.getClass()) {
	    return false;
	}
	final Usuario other = (Usuario) obj;
	if (!Objects.equals(this.senha, other.senha)) {
	    return false;
	}
	if (!Objects.equals(this.email, other.email)) {
	    return false;
	}
	return Objects.equals(this.perfil, other.perfil);
    }

    @Override
    public String toString() {
	return nome + " [" + email + ']';
    }

}
